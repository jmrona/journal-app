{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","orderBy","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","auth","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","active","date","moment","className","format","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","icon","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","cancelButtonText","then","result","isConfirmed","delete","startDeleting","paddingRight","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","catch","message","logout","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","console","log","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","msgError","isFormValid","trim","length","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmail","AuthRouter","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fe7d0b37.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAZ7433YeVfCy4hsiSK0o5g7YH2Kw2V3fM\",\r\n    authDomain: \"react-udemy2020.firebaseapp.com\",\r\n    databaseURL: \"https://react-udemy2020.firebaseio.com\",\r\n    projectId: \"react-udemy2020\",\r\n    storageBucket: \"react-udemy2020.appspot.com\",\r\n    messagingSenderId: \"556433695845\",\r\n    appId: \"1:556433695845:web:7945ec6f85e5da544fd28c\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/journal-app/image/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try{\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if ( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    }catch (error){\r\n        throw error\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).orderBy('date', 'desc').get();\r\n    const notes = [];\r\n    \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n}","export const types = {\r\n    //Login\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    //Register\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n\r\n    //Loading\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    //Notes\r\n    notesAddNew : '[Notes] New note',\r\n    notesActive : '[Notes] Set active note',\r\n    notesLoad : '[Notes] Load notes',\r\n    notesUpdated : '[Notes] Update note',\r\n    notesFileUrl : '[Notes] Update image url',\r\n    notesDelete : '[Notes] Note deleted',\r\n    notesLogoutCleaning : '[Notes] Logout cleaning',\r\n\r\n}","import Swal from 'sweetalert2'\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n    return  async( dispatch, getState ) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '', \r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n\r\n        dispatch( activeNote( doc.id, newNote))\r\n        dispatch( addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ));\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) =>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        if ( !note.url ){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${note.id}`).update( noteToFirestore );\r\n        dispatch( refreshNote( note.id, noteToFirestore ))\r\n        \r\n        Swal.fire('Saved', note.title, 'success');\r\n    } \r\n}\r\n\r\nexport const refreshNote = ( id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async (dispatch, getState) => {\r\n        const { active:activeNote } = getState().notes\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n        const {uid} = getState().auth;\r\n        \r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this note!\",\r\n            icon: \"warning\",\r\n            showCloseButton: true,\r\n            showCancelButton: true,\r\n            focusConfirm: false,\r\n            confirmButtonText: 'Delete',\r\n            cancelButtonText: 'Cancel'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n\r\n                db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n                dispatch( deleteNote(id));\r\n              \r\n                Swal.fire({\r\n                    title: \"Note deleted\",\r\n                    text: \"Poof! Your note has been deleted!\",\r\n                    icon: \"success\"\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Note saved\",\r\n                    text: \"Your note is safe!\",\r\n                    icon: \"info\",\r\n                });\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n    \r\n    const handleInputChange = ({target}) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n\r\n}","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector( state => state.notes)\r\n    const date = moment(note.date)\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(note));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ){\r\n            dispatch( startUploading(file))\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ date.format('MMMM Do YYYY')}</span>\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\" \r\n                name=\"file\"\r\n                style={{ display: 'none'}}\r\n                onChange={ handleFileChange }    \r\n            />\r\n            <div>\r\n                <button onClick={ handlePictureClick }\r\n                    className=\"btn\"\r\n                >\r\n                    <i className=\"fas fa-camera fa-2x\"></i>\r\n                </button>\r\n                <button className=\"btn\" onClick={ handleSave }>\r\n                    <i className=\"fas fa-save fa-2x\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active:note } = useSelector( state => state.notes)\r\n\r\n    const [formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n    useEffect( () => {\r\n        if( note.id !== activeId.current ){\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n    },[note, reset])\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect( () => {\r\n        dispatch( activeNote(formValues.id, {...formValues}) )\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                    autoComplete=\"off\"\r\n                />\r\n                <textarea \r\n                    name=\"body\"\r\n                    placeholder=\"What happened today?\" \r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={ note.url }\r\n                            alt=\"tree\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                <i \r\n                    className=\"fas fa-trash\"\r\n                    style={{ paddingRight: '10px'}}\r\n                ></i>\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"notthing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create un entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { types } from \"../types/types\";\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport { firebase, \r\n        googleAuthProvider } from '../firebase/firebase-config';\r\nimport { noteLogout } from './notes';\r\n\r\n\r\n// Cuando es una tarea asyncrona, el return siempre devuelve una función de flecha\r\n// en la que le pasamos por parámetro el dispatch.\r\nexport const startRegisterWithEmail = ( name, email, password ) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({user}) => {\r\n                await user.updateProfile({ displayName: name})\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            }).catch( err => {\r\n                Swal.fire('Error', err.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() );\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                dispatch(login( user.uid, user.displayName))\r\n                dispatch( finishLoading() )\r\n            })\r\n            .catch( err => {\r\n                dispatch( finishLoading() )\r\n                Swal.fire('Error', err.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// De forma abreviada, quitamos el return y lo metemos entre parentesis\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }  \r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch ( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    \r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote( id, {date, title, body, url} )\r\n    )}\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" \r\n            onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\" \r\n                    style={{ \r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('MMMM')}</span>\r\n                <h4>{ noteDate.format('Do')}</h4>\r\n                <span>{ noteDate.format('dddd')}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector( state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id} \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        console.log(\"click\")\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n    return (\r\n        <div>\r\n            <aside className=\"journal__sidebar\">\r\n                <div className=\"journal__sidebar-navbar\">\r\n                    <h3 className=\"mt-5\">\r\n                        <i className=\"far fa-moon\"/>\r\n                        <span> {name} </span>\r\n                    </h3>\r\n                    <button className=\"btn\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"journal__new-entry\" onClick={ handleAddNew }>\r\n                    <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                    <p className=\"mt-5\">\r\n                        New entry\r\n                    </p>\r\n                </div>\r\n\r\n                <JournalEntries />\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__main-container animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n            \r\n                <Sidebar />\r\n\r\n                <main>\r\n                    { \r\n                        (active) \r\n                            ? <NoteScreen/>\r\n                            : <NothingSelected/>\r\n                    }\r\n                </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const initialState = {\r\n        email: 'jmrona@hotmail.com',\r\n        password: 123456\r\n    }\r\n\r\n    const [ formValues, handleInputChange ] = useForm(initialState);\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        < >\r\n            <h3 className=\"auth__title mb-5 animate__animated animate__fadeIn animate__faster\">Login</h3>\r\n            <form \r\n                onSubmit={handleLogin} \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n                \r\n                <div className=\"auth__social-media\">\r\n                    <p>Login with social media</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\" \r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport isEmail from 'validator/lib/isEmail';\r\n\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmail } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Jose',\r\n        email: 'jmrona@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmail(name, email, password));\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // useSelector - Permite acceder a un state y extraer datos\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n    const isFormValid = () => {\r\n        if( name.trim().length === 0 ){\r\n            dispatch( setError('Name is required'))\r\n            return false;\r\n        } else if ( !isEmail(email) ){\r\n            dispatch( setError('Email is not valid'))\r\n            return false;\r\n        }else if ( password !== password2 || password.length < 5){\r\n            dispatch( setError('Password should match each other and be at least 6 characters'))\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title mb-5 animate__animated animate__fadeIn animate__faster\">Register</h3>\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                {\r\n                    msgError && \r\n                    <div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n                \r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to=\"/auth/login\" \r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route, \r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" component={LoginScreen} />\r\n                    <Route path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                (!isAuthenticated) \r\n                    ? (<Component { ...props } />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                (isAuthenticated) \r\n                    ? (<Component { ...props } />)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\nimport { useDispatch } from 'react-redux'\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    // Compruebo si ya estoy loggeado\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            if( user?.uid ){\r\n                dispatch( login (user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                \r\n                dispatch( startLoadingNotes( user.uid ));\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if (checking){\r\n        return ( \r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        isAuthenticated={isLoggedIn} \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter } \r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ JournalScreen } \r\n                        isAuthenticated={isLoggedIn} \r\n                    />\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","/* \r\n    {\r\n        notes: [],\r\n        active: null, OR\r\n        active: {\r\n            id: '',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: ''\r\n        }\r\n    }\r\n*/\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n            \r\n        case types.notesLoad: \r\n            return {\r\n                ...state,\r\n                notes: [...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated: \r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: ''\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch ( action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading : false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n// CombineReduces - Objeto donde indicamos todos nuestros reducer y usamos para\r\n// pasar como parametro a createStore ya que éste solo recibe un reducer pero de esta\r\n// forma podemos pasarle el reducer que necesitemos en ese momento\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n// CreateStore - fn de Redux para crear nuestro store. En el primer parametro le pasamos\r\n// nuestro objeto anterior y como segundo parametro le pasamos una config para la\r\n// extension Redux de google chrome y dentro de ésta tenemos el middleware thunk\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\n/* \r\n    { \r\n        uid: as32dnajsdn3\r\n        name: 'JOSE'\r\n    }\r\n*/\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}